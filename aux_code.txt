template<class T> void debugList(const QList<T>& x)
{
  for(int i = 0; i<x.count(); ++i)
  {
    qDebug() << x.at(i).rect() << "/" << x.at(i).rectType()<< "/"<< x.at(i).destView();
  }
}



/*
#include <QTime>

  static QTime time1;
  static bool time1started(false);
  if (!time1started)
  {
    time1.start();
    time1started = true;
  }

  QTime time2;
  static double t2(0);

  time2.start();


  t2 += time2.elapsed();
  qDebug() << "T" << time1.elapsed() << "sum Tf" << time2.elapsed() << " Tf" << t2;



*/


  connect(this->mUndoStack, SIGNAL(canUndoChanged(bool)), this, SLOT(undoStateChanged(bool)));
